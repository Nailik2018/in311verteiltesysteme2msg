quarkus.swagger-ui.always-include=true
quarkus.smallrye-openapi.path=/openapi
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET, POST, PUT, DELETE, OPTIONS
quarkus.http.cors.headers=Contet-Type
quarkus.http.port=9091
%dev.quarkus.http.port=8881

#mp.messaging.incoming.text-validator-request.auto.offset.reset=earliest
#mp.messaging.incoming.text-validator-request.connector=smallrye-kafka
#mp.messaging.outgoing.text-validator-response.topic=text-validator-response
#mp.messaging.outgoing.text-validator-response.connector=smallrye-kafka

#mp.messaging.incoming.text-validator-request.auto.offset.reset=earliest
#mp.messaging.incoming.text-validator-request.connector=smallrye-kafka
#mp.messaging.outgoing.text-validator-response.topic=text-validator-response
#mp.messaging.outgoing.text-validator-response.connector=smallrye-kafka

# Konfiguration für eingehende Nachrichten (Anfragen vom Blog-Backend)
mp.messaging.incoming.text-validator-request.auto.offset.reset=earliest
mp.messaging.incoming.text-validator-request.connector=smallrye-kafka
#mp.messaging.incoming.text-validator-request.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.incoming.text-validator-request.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Konfiguration für ausgehende Nachrichten (Antworten an das Blog-Backend)
#mp.messaging.outgoing.text-validator-response.topic=text-validator-response
#mp.messaging.outgoing.text-validator-response.connector=smallrye-kafka
#mp.messaging.outgoing.text-validator-response.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#mp.messaging.outgoing.text-validator-response.value.serializer=org.apache.kafka.common.serialization.StringSerializer